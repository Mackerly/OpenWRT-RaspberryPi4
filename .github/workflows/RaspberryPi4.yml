name: Build OpenWRT for RaspberryPi4

on: push

env:
  SSH_ACTIONS: false
  TZ: Asia/Shanghai
  upxVersion: 3.96
  
jobs:
  build:

    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id 
      

    steps:
    
    - name: free disk space
      run: |
        sudo swapoff -a
        sudo rm -f /swapfile
        sudo apt clean
        docker rmi $(docker image ls -aq)
        df -h
    
    #- name: cleanup old action artifacts
    #  run: .github/workflows/purge_artifacts.sh ${{ secrets.REPO_ACCESS_TOKEN }}
      
    - name: 安装编译环境需要的依赖包.
      run: |
        sudo apt-get update
        sudo apt-get install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib
        sudo apt-get -qq autoremove --purge
        sudo apt-get -qq clean
        sudo apt clean

    - name: 克隆源码 
      run: |
        git clone https://git.openwrt.org/openwrt/openwrt.git
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 添加luci-app-passwal、luci-app-ssr-plu、luci-app-adbyby-plus
      run: |
        cd openwrt/package
        svn co https://github.com/Lienol/openwrt-package/trunk/lienol/luci-app-passwall
        svn co https://github.com/Lienol/openwrt-package/trunk/package/tcping
        svn co https://github.com/Lienol/openwrt-package/trunk/package/dns2socks
        svn co https://github.com/Lienol/openwrt-package/trunk/package/brook
        svn co https://github.com/Lienol/openwrt-package/trunk/package/chinadns-ng
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/ipt2socks
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/shadowsocksr-libev
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/v2ray
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/trojan
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/ipt2socks
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/pdnsd-alt
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/v2ray-plugin
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/simple-obfs
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-adbyby-plus
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-ssr-plus
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/srelay
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/adbyby
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/dnsforwarder
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/kcptun  
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/UnblockNeteaseMusicGo
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/redsocks2
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/tcpping
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/microsocks  

    - name: 添加luci-app-vlmcsd、vlmcsd
      run: |
       cd openwrt/package
       svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-vlmcsd
       svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/vlmcsd
 
    - name: 添加其他的软件包源码
      run: |
        cd openwrt/package
        # 网易云音乐解锁
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/UnblockNeteaseMusic
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-unblockmusic

        # 百度网盘相关
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/baidupcs-web
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-baidupcs-web

        # 动态dns相关
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/ddns-scripts_aliyun
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/ddns-scripts_dnspod

        # 内网穿透相关
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/frp
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-frpc
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-nps
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/npc

        # Docker相关
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-dockerman
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-lib-docker

        # vsftp文件传输
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-vsftpd
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/vsftpd-alt

        # 其他软件
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-guest-wifi
        svn co https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-usb-printer
        git clone  https://github.com/TheMMcOfficial/lede-cups.git
        mkdir yaaw
        wget --no-check-certificate -O ./yaaw/Makefile https://raw.githubusercontent.com/openwrt/packages/lede-17.01/net/yaaw/Makefile
        # git clone  https://github.com/frainzy1477/luci-app-clash.git
        # git clone  https://github.com/Dreamacro/clash       

        # luci主题
        git clone https://github.com/jerrykuku/luci-theme-argon.git 
        git clone https://github.com/yangsongli/luci-theme-atmaterial.git

      
    - name: 更新 upx 程序版本,版本太低，压缩的 v2ray 可能会出错
      run: |
        wget -O /tmp/upx-3.96-amd64_linux.tar.xz https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz
        cd /tmp && tar xJf upx-3.96-amd64_linux.tar.xz 
        sudo mv /usr/bin/upx /usr/bin/upx.old && sudo cp /tmp/upx-3.96-amd64_linux/upx /usr/bin/upx
        cd - && cp /tmp/upx-3.96-amd64_linux/upx ./openwrt/staging_dir/host/bin/upx
        rm -rf /tmp/upx-3.96-amd64_linux*
    
    - name: 整理空间
      run: |
        sudo mkdir /mnt/openwrt && sudo chown runner.docker /mnt/openwrt
        mkdir /mnt/openwrt/dl /mnt/openwrt/bin /mnt/openwrt/build_dir
        cd openwrt
        mv feeds staging_dir /mnt/openwrt
        ln -s /mnt/openwrt/dl ./dl
        ln -s /mnt/openwrt/staging_dir ./staging_dir
        ln -s /mnt/openwrt/feeds ./feeds
        ln -s /mnt/openwrt/bin ./bin
        ln -s /mnt/openwrt/build_dir ./build_dir
        mkdir -p ./files/etc/hotplug.d/block
        mkdir -p ./files/etc/uci-defaults/
        wget -O ./files/etc/hotplug.d/block/20-smb https://github.com/Mackerly/OpenWRT-RaspberryPi4/raw/master/20-smb
        wget -O ./files/etc/hotplug.d/block/11-mount https://github.com/Mackerly/OpenWRT-RaspberryPi4/raw/master/11-mount
        wget -O ./files/etc/banner https://github.com/Mackerly/OpenWRT-RaspberryPi4/raw/master/banner
        wget -O ./files/etc/uci-defaults/openwrtinit.sh https://github.com/Mackerly/OpenWRT-RaspberryPi4/raw/master/openwrtinit.sh
        chmod +x ./files/etc/uci-defaults/openwrtinit.sh ./files/etc/hotplug.d/block/20-smb ./files/etc/hotplug.d/block/11-mount

    - name: 生成默认的.config文件
      run: |
       # cd openwrt && make defconfig
       cd openwrt && rm -f ./.config* && wget --no-check-certificate -O ./.config https://raw.githubusercontent.com/Mackerly/OpenWRT-RaspberryPi4/master/myconfig
       make defconfig
       
       # 编译 树莓派4 固件:
       # cat >> .config <<EOF
       # CONFIG_TARGET_bcm27xx=y
       # CONFIG_TARGET_bcm27xx_bcm2711=y
       # CONFIG_TARGET_bcm27xx_bcm2711_DEVICE_rpi-4=y
       
       # 默认root分区是104MB，这里改到500MB，避免软件太多，生成镜像失败
       # CONFIG_TARGET_ROOTFS_PARTSIZE=500
       # EOF
       
       # 编译后生成对应版本的 sdk imagebuilder:
       # cat >> .config <<EOF
       # CONFIG_SDK=y
       # EOF
       # make defconfig
        
    - name: SSH 链接到 Actions
      uses: Mackerly/debugger-action@master
      # uses: csexton/debugger-action@master
      if: env.SSH_ACTIONS == 'true'
      
    - name: 下载需要用到的源码包到dl文件夹
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 开始编译Openwrt
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"    
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"
        
    - name: 整理编译结果
      run: |
        cd openwrt 
        mkdir imagebuilder
        find bin/ -name *imagebuilder* -exec cp {} ./imagebuilder \;
        
        mkdir sdk
        find bin/ -name *sdk* -exec cp {} ./sdk \;
        
        mkdir images
        find bin/targets -name *factory* -exec cp {} ./images \;
        find bin/targets -name *sysupgrade* -exec cp {} ./sysupgrade \;
        
    - name: 上传编译的结果到 Actions 页面
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: OpenWrt
        path: /mnt/openwrt/bin
    

    - name: 上传 imagebuilder 到 Actions 页面
      uses: actions/upload-artifact@master
      with:
        name: imagebuilder
        path: openwrt/imagebuilder

    - name: 上传 sdk 到 Actions 页面
      uses: actions/upload-artifact@master
      with:
        name: sdk
        path: openwrt/sdk

    - name: 上传 刷机固件 到 Actions 页面
      uses: actions/upload-artifact@master
      with:
        name: images
        path: openwrt/images

    - name: 上传.config文件到Acions页面
      uses: actions/upload-artifact@master
      with:
        name: .config
        path: openwrt/.config


        
        
